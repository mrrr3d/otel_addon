apiVersion: addon.open-cluster-management.io/v1alpha1
kind: AddOnTemplate
metadata:
  name: otel-addon
spec:
  addonName: otel-addon
  agentSpec:
    workload:
      manifests:
        ## kepler
        # Create namespace monitoring-addon first
        - apiVersion: v1
          kind: ServiceAccount
          metadata:
            labels:
              sustainable-computing.io/app: kepler
            name: kepler-sa
            namespace: monitoring-addon
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            labels:
              sustainable-computing.io/app: kepler
            name: kepler-clusterrole
          rules:
            - apiGroups:
                - ""
              resources:
                - nodes/metrics
                - nodes/proxy
                - nodes/stats
                - pods
              verbs:
                - get
                - watch
                - list
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            labels:
              sustainable-computing.io/app: kepler
            name: kepler-clusterrole-binding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: kepler-clusterrole
          subjects:
            - kind: ServiceAccount
              name: kepler-sa
              namespace: monitoring-addon
        - apiVersion: v1
          data:
            BIND_ADDRESS: 0.0.0.0:9102
            CPU_ARCH_OVERRIDE: ""
            ENABLE_EBPF_CGROUPID: "true"
            ENABLE_GPU: "true"
            ENABLE_PROCESS_METRICS: "false"
            ENABLE_QAT: "false"
            EXPOSE_CGROUP_METRICS: "false"
            EXPOSE_HW_COUNTER_METRICS: "true"
            EXPOSE_IRQ_COUNTER_METRICS: "true"
            KEPLER_LOG_LEVEL: "1"
            KEPLER_NAMESPACE: monitoring-addon
            METRIC_PATH: /metrics
            MODEL_CONFIG: |
              CONTAINER_COMPONENTS_ESTIMATOR=false
            PROMETHEUS_SCRAPE_INTERVAL: 30s
            REDFISH_PROBE_INTERVAL_IN_SECONDS: "60"
            REDFISH_SKIP_SSL_VERIFY: "true"
          kind: ConfigMap
          metadata:
            labels:
              sustainable-computing.io/app: kepler
            name: kepler-cfm
            namespace: monitoring-addon
        - apiVersion: v1
          data:
            redfish.csv: |
              eW91cl9rdWJlbGV0X25vZGVfbmFtZSxyZWRmaXNoX3VzZXJuYW1lLHJlZGZpc2hfcGFzc3
              dvcmQsaHR0cHM6Ly9yZWRmaXNoX2lwX29yX2hvc3RuYW1lCg==
          kind: Secret
          metadata:
            labels:
              sustainable-computing.io/app: kepler
            name: redfish-4kh9d7bc7m
            namespace: monitoring-addon
          type: Opaque
        - apiVersion: v1
          kind: Service
          metadata:
            labels:
              app.kubernetes.io/component: exporter
              app.kubernetes.io/name: kepler-exporter
              sustainable-computing.io/app: kepler
            name: kepler-exporter
            namespace: monitoring-addon
          spec:
            clusterIP: None
            ports:
              - name: http
                port: 9102
                targetPort: http
            selector:
              app.kubernetes.io/component: exporter
              app.kubernetes.io/name: kepler-exporter
              sustainable-computing.io/app: kepler
        - apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            labels:
              sustainable-computing.io/app: kepler
            name: kepler-exporter
            namespace: monitoring-addon
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/component: exporter
                app.kubernetes.io/name: kepler-exporter
                sustainable-computing.io/app: kepler
            template:
              metadata:
                labels:
                  app.kubernetes.io/component: exporter
                  app.kubernetes.io/name: kepler-exporter
                  sustainable-computing.io/app: kepler
              spec:
                containers:
                  - args:
                      - /usr/bin/kepler -v=1 -redfish-cred-file-path=/etc/redfish/redfish.csv
                    command:
                      - /bin/sh
                      - -c
                    env:
                      - name: NODE_IP
                        valueFrom:
                          fieldRef:
                            fieldPath: status.hostIP
                      - name: NODE_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: spec.nodeName
                    image: quay.io/sustainable_computing_io/kepler:latest
                    imagePullPolicy: Always
                    livenessProbe:
                      failureThreshold: 5
                      httpGet:
                        path: /healthz
                        port: 9102
                        scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 60
                      successThreshold: 1
                      timeoutSeconds: 10
                    name: kepler-exporter
                    ports:
                      - containerPort: 9102
                        name: http
                    resources:
                      requests:
                        cpu: 100m
                        memory: 400Mi
                    securityContext:
                      privileged: true
                    volumeMounts:
                      - mountPath: /lib/modules
                        name: lib-modules
                        readOnly: true
                      - mountPath: /sys
                        name: tracing
                        readOnly: true
                      - mountPath: /proc
                        name: proc
                      - mountPath: /var/run
                        name: var-run
                      - mountPath: /etc/kepler/kepler.config
                        name: cfm
                        readOnly: true
                      - mountPath: /etc/redfish
                        name: redfish
                        readOnly: true
                dnsPolicy: ClusterFirstWithHostNet
                hostPID: true
                serviceAccountName: kepler-sa
                tolerations:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/control-plane
                    operator: Exists
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/master
                    operator: Exists
                volumes:
                  - hostPath:
                      path: /lib/modules
                      type: Directory
                    name: lib-modules
                  - hostPath:
                      path: /sys
                      type: Directory
                    name: tracing
                  - hostPath:
                      path: /proc
                      type: Directory
                    name: proc
                  - hostPath:
                      path: /var/run
                      type: Directory
                    name: var-run
                  - configMap:
                      name: kepler-cfm
                    name: cfm
                  - name: redfish
                    secret:
                      secretName: redfish-4kh9d7bc7m

        ## otel collector
        # - apiVersion: v1
        #   kind: ConfigMap
        #   metadata:
        #     name: otel-collector-conf
        #     namespace: open-cluster-management-addon
        #     labels:
        #       app: opentelemetry
        #       component: otel-collector-conf
        #   data:
        #     otel-collector-config: |
        #       receivers:
        #         otlp:
        #           protocols:
        #             grpc:
        #               endpoint: ${env:MY_POD_IP}:4317
        #             http:
        #               endpoint: ${env:MY_POD_IP}:4318
        #       processors:
        #         batch:
        #         memory_limiter:
        #           limit_mib: 1500
        #           spike_limit_mib: 512
        #           check_interval: 5s
        #       extensions:
        #         zpages: {}
        #       exporters:
        #         prometheusremotewrite:
        #           endpoint: {{PROM_REMOTE_WRITE_ENDPOINT}}
        #           tls:
        #             insecure: false
        #             cert_file: /managed/open-cluster-management.io-otel-addon/tls.crt
        #             key_file: /managed/open-cluster-management.io-otel-addon/tls.key
        #             ca_file: /prom-certs/ca.crt
        #           external_labels:
        #             cluster_name: {{CLUSTER_NAME}}
        #       service:
        #         extensions: [zpages]
        #         pipelines:
        #           traces/1:
        #             receivers: [otlp]
        #             processors: [memory_limiter, batch]
        #             exporters: [otlp]
        # - apiVersion: v1
        #   kind: Service
        #   metadata:
        #     name: otel-collector
        #     labels:
        #       app: opentelemetry
        #       component: otel-collector
        #   spec:
        #     ports:
        #       - name: otlp-grpc # Default endpoint for OpenTelemetry gRPC receiver.
        #         port: 4317
        #         protocol: TCP
        #         targetPort: 4317
        #       - name: otlp-http # Default endpoint for OpenTelemetry HTTP receiver.
        #         port: 4318
        #         protocol: TCP
        #         targetPort: 4318
        #       - name: metrics # Default endpoint for querying metrics.
        #         port: 8888
        #     selector:
        #       component: otel-collector
        # - apiVersion: apps/v1
        #   kind: Deployment
        #   metadata:
        #     name: otel-collector
        #     labels:
        #       app: opentelemetry
        #       component: otel-collector
        #   spec:
        #     selector:
        #       matchLabels:
        #         app: opentelemetry
        #         component: otel-collector
        #     minReadySeconds: 5
        #     progressDeadlineSeconds: 120
        #     replicas: 1 #TODO - adjust this to your own requirements
        #     template:
        #       metadata:
        #         labels:
        #           app: opentelemetry
        #           component: otel-collector
        #       spec:
        #         containers:
        #           - command:
        #               - "/otelcol"
        #               - "--config=/conf/otel-collector-config.yaml"
        #             image: otel/opentelemetry-collector:latest
        #             name: otel-collector
        #             resources:
        #               limits:
        #                 cpu: 1
        #                 memory: 2Gi
        #               requests:
        #                 cpu: 200m
        #                 memory: 400Mi
        #             ports:
        #               - containerPort: 55679 # Default endpoint for ZPages.
        #               - containerPort: 4317 # Default endpoint for OpenTelemetry receiver.
        #               - containerPort: 14250 # Default endpoint for Jaeger gRPC receiver.
        #               - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
        #               - containerPort: 9411 # Default endpoint for Zipkin receiver.
        #               - containerPort: 8888 # Default endpoint for querying metrics.
        #             env:
        #               - name: MY_POD_IP
        #                 valueFrom:
        #                   fieldRef:
        #                     apiVersion: v1
        #                     fieldPath: status.podIP
        #               - name: GOMEMLIMIT
        #                 value: 1600MiB
        #             volumeMounts:
        #               - name: otel-collector-config-vol
        #                 mountPath: /conf
        #                 #        - name: otel-collector-secrets
        #                 #          mountPath: /secrets
        #         volumes:
        #           - configMap:
        #               name: otel-collector-conf
        #               items:
        #                 - key: otel-collector-config
        #                   path: otel-collector-config.yaml
        #             name: otel-collector-config-vol
        #   #        - secret:
        #   #            name: otel-collector-secrets
        #   #            items:
        #   #              - key: cert.pem
        #   #                path: cert.pem
        #   #              - key: key.pem
        #   #                path: key.pem
  registration:
    - type: CustomSigner
      customSigner:
        signerName: open-cluster-management.io/otel-addon
        signingCA:
          name: otel-signer
